pipeline {
    agent any

    environment {
        AWS_REGION = "ap-south-1"
        ECR_REPO = "<account-id>.dkr.ecr.ap-south-1.amazonaws.com/jenkins-prisma-demo"
        IMAGE_TAG = "latest"
        DOCKER_IMAGE = "${ECR_REPO}:${IMAGE_TAG}"
        PRISMA_ACCESS_KEY = credentials('PRISMA_API_KEY') // stored in Jenkins Credentials
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your-org/your-api-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Prisma Cloud Scan') {
            steps {
                script {
                    sh '''
                    curl -L -o twistcli https://downloads.twistlock.com/releases/twistcli/latest
                    chmod +x twistcli

                    ./twistcli images scan \
                      --address https://<your-prisma-console-url> \
                      --token $PRISMA_ACCESS_KEY \
                      --details \
                      --output-file prisma-scan-result.json \
                      $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Login to ECR') {
            steps {
                script {
                    sh '''
                    aws ecr get-login-password --region $AWS_REGION | \
                    docker login --username AWS --password-stdin $ECR_REPO
                    '''
                }
            }
        }

        stage('Push to ECR') {
            steps {
                sh 'docker push $DOCKER_IMAGE'
            }
        }

        stage('Archive Prisma Scan Report') {
            steps {
                archiveArtifacts artifacts: 'prisma-scan-result.json', onlyIfSuccessful: true
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
